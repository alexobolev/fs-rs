<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>

    <IsPackable>false</IsPackable>
    <GenerateProgramFile>false</GenerateProgramFile>
  </PropertyGroup>

  <!-- After building .NET code, execute the foreign Rust project. -->
  <!-- Notice the copy command after the import. -->
  <Target Name="BuildRust" BeforeTargets="AfterBuild">
    <MSBuild Projects="..\Native\Native.rsproj" Targets="Build">
      <Output TaskParameter="TargetOutputs" PropertyName="RustOutput" />
    </MSBuild>
    <!-- <Exec Command="echo DEBUG RustOutput = $(RustOutput)" /> -->
    <Copy SourceFiles="..\Native\$(RustOutput)" DestinationFolder="$(TargetDir)" />
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\Native\Native.rsproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="Tests.fs" />
    <Compile Include="Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.1.0" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.utility" Version="2.4.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="3.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Managed\Managed.fsproj" />
  </ItemGroup>

</Project>
